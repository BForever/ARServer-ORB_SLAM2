// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ARConnection.proto

#include "ARConnection.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ARConnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IMUPoint_ARConnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ARConnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectInfo_ARConnection_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ARConnection_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectPosition_ARConnection_2eproto;
namespace ARConnection {
class MatrixBlockDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MatrixBlock> _instance;
} _MatrixBlock_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Request> _instance;
} _Request_default_instance_;
class IMUPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IMUPoint> _instance;
} _IMUPoint_default_instance_;
class ImageBlockDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImageBlock> _instance;
} _ImageBlock_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Response> _instance;
} _Response_default_instance_;
class ObjPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjPosition> _instance;
} _ObjPosition_default_instance_;
class ObjectPositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectPosition> _instance;
} _ObjectPosition_default_instance_;
class ObjectInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectInfo> _instance;
} _ObjectInfo_default_instance_;
class ObjectInfoListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectInfoList> _instance;
} _ObjectInfoList_default_instance_;
}  // namespace ARConnection
static void InitDefaultsscc_info_IMUPoint_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_IMUPoint_default_instance_;
    new (ptr) ::ARConnection::IMUPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::IMUPoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IMUPoint_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IMUPoint_ARConnection_2eproto}, {}};

static void InitDefaultsscc_info_ImageBlock_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_ImageBlock_default_instance_;
    new (ptr) ::ARConnection::ImageBlock();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::ImageBlock::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ImageBlock_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ImageBlock_ARConnection_2eproto}, {
      &scc_info_IMUPoint_ARConnection_2eproto.base,}};

static void InitDefaultsscc_info_MatrixBlock_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_MatrixBlock_default_instance_;
    new (ptr) ::ARConnection::MatrixBlock();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::MatrixBlock::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MatrixBlock_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MatrixBlock_ARConnection_2eproto}, {}};

static void InitDefaultsscc_info_ObjPosition_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_ObjPosition_default_instance_;
    new (ptr) ::ARConnection::ObjPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::ObjPosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjPosition_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjPosition_ARConnection_2eproto}, {}};

static void InitDefaultsscc_info_ObjectInfo_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_ObjectInfo_default_instance_;
    new (ptr) ::ARConnection::ObjectInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::ObjectInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectInfo_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectInfo_ARConnection_2eproto}, {
      &scc_info_ObjectPosition_ARConnection_2eproto.base,}};

static void InitDefaultsscc_info_ObjectInfoList_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_ObjectInfoList_default_instance_;
    new (ptr) ::ARConnection::ObjectInfoList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::ObjectInfoList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectInfoList_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectInfoList_ARConnection_2eproto}, {
      &scc_info_ObjectInfo_ARConnection_2eproto.base,}};

static void InitDefaultsscc_info_ObjectPosition_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_ObjectPosition_default_instance_;
    new (ptr) ::ARConnection::ObjectPosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::ObjectPosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectPosition_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjectPosition_ARConnection_2eproto}, {}};

static void InitDefaultsscc_info_Request_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_Request_default_instance_;
    new (ptr) ::ARConnection::Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Request_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Request_ARConnection_2eproto}, {}};

static void InitDefaultsscc_info_Response_ARConnection_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ARConnection::_Response_default_instance_;
    new (ptr) ::ARConnection::Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ARConnection::Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Response_ARConnection_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Response_ARConnection_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ARConnection_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ARConnection_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ARConnection_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ARConnection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r0c0_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r0c1_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r0c2_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r0c3_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r1c0_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r1c1_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r1c2_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r1c3_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r2c0_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r2c1_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r2c2_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r2c3_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r3c0_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r3c1_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r3c2_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, r3c3_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::MatrixBlock, update_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::Request, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::IMUPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::IMUPoint, ax_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::IMUPoint, ay_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::IMUPoint, az_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::IMUPoint, wx_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::IMUPoint, wy_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::IMUPoint, wz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ImageBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ImageBlock, size_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::ImageBlock, image_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::ImageBlock, points_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::Response, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjPosition, x_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjPosition, y_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjPosition, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectPosition, x_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectPosition, y_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectPosition, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectInfo, name_),
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectInfo, position_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectInfoList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ARConnection::ObjectInfoList, objects_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ARConnection::MatrixBlock)},
  { 22, -1, sizeof(::ARConnection::Request)},
  { 28, -1, sizeof(::ARConnection::IMUPoint)},
  { 39, -1, sizeof(::ARConnection::ImageBlock)},
  { 47, -1, sizeof(::ARConnection::Response)},
  { 53, -1, sizeof(::ARConnection::ObjPosition)},
  { 61, -1, sizeof(::ARConnection::ObjectPosition)},
  { 69, -1, sizeof(::ARConnection::ObjectInfo)},
  { 76, -1, sizeof(::ARConnection::ObjectInfoList)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_MatrixBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_IMUPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_ImageBlock_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_ObjPosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_ObjectPosition_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_ObjectInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ARConnection::_ObjectInfoList_default_instance_),
};

const char descriptor_table_protodef_ARConnection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022ARConnection.proto\022\014ARConnection\"\375\001\n\013M"
  "atrixBlock\022\014\n\004r0c0\030\001 \001(\001\022\014\n\004r0c1\030\002 \001(\001\022\014"
  "\n\004r0c2\030\003 \001(\001\022\014\n\004r0c3\030\004 \001(\001\022\014\n\004r1c0\030\005 \001(\001"
  "\022\014\n\004r1c1\030\006 \001(\001\022\014\n\004r1c2\030\007 \001(\001\022\014\n\004r1c3\030\010 \001"
  "(\001\022\014\n\004r2c0\030\t \001(\001\022\014\n\004r2c1\030\n \001(\001\022\014\n\004r2c2\030\013"
  " \001(\001\022\014\n\004r2c3\030\014 \001(\001\022\014\n\004r3c0\030\r \001(\001\022\014\n\004r3c1"
  "\030\016 \001(\001\022\014\n\004r3c2\030\017 \001(\001\022\014\n\004r3c3\030\020 \001(\001\022\016\n\006up"
  "date\030\021 \001(\010\"\027\n\007Request\022\014\n\004name\030\001 \001(\t\"R\n\010I"
  "MUPoint\022\n\n\002ax\030\001 \001(\001\022\n\n\002ay\030\002 \001(\001\022\n\n\002az\030\003 "
  "\001(\001\022\n\n\002wx\030\004 \001(\001\022\n\n\002wy\030\005 \001(\001\022\n\n\002wz\030\006 \001(\001\""
  "Q\n\nImageBlock\022\014\n\004size\030\001 \001(\003\022\r\n\005image\030\002 \001"
  "(\014\022&\n\006points\030\003 \003(\0132\026.ARConnection.IMUPoi"
  "nt\"\032\n\010Response\022\016\n\006status\030\001 \001(\t\".\n\013ObjPos"
  "ition\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"1"
  "\n\016ObjectPosition\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t"
  "\n\001z\030\003 \001(\001\"J\n\nObjectInfo\022\014\n\004name\030\001 \001(\t\022.\n"
  "\010position\030\002 \001(\0132\034.ARConnection.ObjectPos"
  "ition\";\n\016ObjectInfoList\022)\n\007objects\030\001 \003(\013"
  "2\030.ARConnection.ObjectInfo2\240\002\n\023ARConnect"
  "ionService\022A\n\rGetViewMatrix\022\025.ARConnecti"
  "on.Request\032\031.ARConnection.MatrixBlock\022A\n"
  "\013UploadImage\022\030.ARConnection.ImageBlock\032\026"
  ".ARConnection.Response(\001\022=\n\014RequestReset"
  "\022\025.ARConnection.Request\032\026.ARConnection.R"
  "esponse\022D\n\rGetObjectList\022\025.ARConnection."
  "Request\032\034.ARConnection.ObjectInfoListB-\n"
  "\026org.emnets.ar.arclientB\021ARConnectionPro"
  "toP\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ARConnection_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ARConnection_2eproto_sccs[9] = {
  &scc_info_IMUPoint_ARConnection_2eproto.base,
  &scc_info_ImageBlock_ARConnection_2eproto.base,
  &scc_info_MatrixBlock_ARConnection_2eproto.base,
  &scc_info_ObjPosition_ARConnection_2eproto.base,
  &scc_info_ObjectInfo_ARConnection_2eproto.base,
  &scc_info_ObjectInfoList_ARConnection_2eproto.base,
  &scc_info_ObjectPosition_ARConnection_2eproto.base,
  &scc_info_Request_ARConnection_2eproto.base,
  &scc_info_Response_ARConnection_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ARConnection_2eproto_once;
static bool descriptor_table_ARConnection_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ARConnection_2eproto = {
  &descriptor_table_ARConnection_2eproto_initialized, descriptor_table_protodef_ARConnection_2eproto, "ARConnection.proto", 1092,
  &descriptor_table_ARConnection_2eproto_once, descriptor_table_ARConnection_2eproto_sccs, descriptor_table_ARConnection_2eproto_deps, 9, 0,
  schemas, file_default_instances, TableStruct_ARConnection_2eproto::offsets,
  file_level_metadata_ARConnection_2eproto, 9, file_level_enum_descriptors_ARConnection_2eproto, file_level_service_descriptors_ARConnection_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ARConnection_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ARConnection_2eproto), true);
namespace ARConnection {

// ===================================================================

void MatrixBlock::InitAsDefaultInstance() {
}
class MatrixBlock::_Internal {
 public:
};

MatrixBlock::MatrixBlock()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.MatrixBlock)
}
MatrixBlock::MatrixBlock(const MatrixBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&r0c0_, &from.r0c0_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_) -
    reinterpret_cast<char*>(&r0c0_)) + sizeof(update_));
  // @@protoc_insertion_point(copy_constructor:ARConnection.MatrixBlock)
}

void MatrixBlock::SharedCtor() {
  ::memset(&r0c0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_) -
      reinterpret_cast<char*>(&r0c0_)) + sizeof(update_));
}

MatrixBlock::~MatrixBlock() {
  // @@protoc_insertion_point(destructor:ARConnection.MatrixBlock)
  SharedDtor();
}

void MatrixBlock::SharedDtor() {
}

void MatrixBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MatrixBlock& MatrixBlock::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MatrixBlock_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void MatrixBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.MatrixBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&r0c0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_) -
      reinterpret_cast<char*>(&r0c0_)) + sizeof(update_));
  _internal_metadata_.Clear();
}

const char* MatrixBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double r0c0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          r0c0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r0c1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          r0c1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r0c2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          r0c2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r0c3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          r0c3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r1c0 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          r1c0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r1c1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          r1c1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r1c2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          r1c2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r1c3 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          r1c3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r2c0 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          r2c0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r2c1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          r2c1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r2c2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          r2c2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r2c3 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 97)) {
          r2c3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r3c0 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 105)) {
          r3c0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r3c1 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 113)) {
          r3c1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r3c2 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 121)) {
          r3c2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r3c3 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 129)) {
          r3c3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool update = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          update_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MatrixBlock::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.MatrixBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double r0c0 = 1;
  if (!(this->r0c0() <= 0 && this->r0c0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_r0c0(), target);
  }

  // double r0c1 = 2;
  if (!(this->r0c1() <= 0 && this->r0c1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_r0c1(), target);
  }

  // double r0c2 = 3;
  if (!(this->r0c2() <= 0 && this->r0c2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_r0c2(), target);
  }

  // double r0c3 = 4;
  if (!(this->r0c3() <= 0 && this->r0c3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_r0c3(), target);
  }

  // double r1c0 = 5;
  if (!(this->r1c0() <= 0 && this->r1c0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_r1c0(), target);
  }

  // double r1c1 = 6;
  if (!(this->r1c1() <= 0 && this->r1c1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_r1c1(), target);
  }

  // double r1c2 = 7;
  if (!(this->r1c2() <= 0 && this->r1c2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_r1c2(), target);
  }

  // double r1c3 = 8;
  if (!(this->r1c3() <= 0 && this->r1c3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_r1c3(), target);
  }

  // double r2c0 = 9;
  if (!(this->r2c0() <= 0 && this->r2c0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_r2c0(), target);
  }

  // double r2c1 = 10;
  if (!(this->r2c1() <= 0 && this->r2c1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_r2c1(), target);
  }

  // double r2c2 = 11;
  if (!(this->r2c2() <= 0 && this->r2c2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_r2c2(), target);
  }

  // double r2c3 = 12;
  if (!(this->r2c3() <= 0 && this->r2c3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(12, this->_internal_r2c3(), target);
  }

  // double r3c0 = 13;
  if (!(this->r3c0() <= 0 && this->r3c0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_r3c0(), target);
  }

  // double r3c1 = 14;
  if (!(this->r3c1() <= 0 && this->r3c1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(14, this->_internal_r3c1(), target);
  }

  // double r3c2 = 15;
  if (!(this->r3c2() <= 0 && this->r3c2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(15, this->_internal_r3c2(), target);
  }

  // double r3c3 = 16;
  if (!(this->r3c3() <= 0 && this->r3c3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(16, this->_internal_r3c3(), target);
  }

  // bool update = 17;
  if (this->update() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_update(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.MatrixBlock)
  return target;
}

size_t MatrixBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.MatrixBlock)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double r0c0 = 1;
  if (!(this->r0c0() <= 0 && this->r0c0() >= 0)) {
    total_size += 1 + 8;
  }

  // double r0c1 = 2;
  if (!(this->r0c1() <= 0 && this->r0c1() >= 0)) {
    total_size += 1 + 8;
  }

  // double r0c2 = 3;
  if (!(this->r0c2() <= 0 && this->r0c2() >= 0)) {
    total_size += 1 + 8;
  }

  // double r0c3 = 4;
  if (!(this->r0c3() <= 0 && this->r0c3() >= 0)) {
    total_size += 1 + 8;
  }

  // double r1c0 = 5;
  if (!(this->r1c0() <= 0 && this->r1c0() >= 0)) {
    total_size += 1 + 8;
  }

  // double r1c1 = 6;
  if (!(this->r1c1() <= 0 && this->r1c1() >= 0)) {
    total_size += 1 + 8;
  }

  // double r1c2 = 7;
  if (!(this->r1c2() <= 0 && this->r1c2() >= 0)) {
    total_size += 1 + 8;
  }

  // double r1c3 = 8;
  if (!(this->r1c3() <= 0 && this->r1c3() >= 0)) {
    total_size += 1 + 8;
  }

  // double r2c0 = 9;
  if (!(this->r2c0() <= 0 && this->r2c0() >= 0)) {
    total_size += 1 + 8;
  }

  // double r2c1 = 10;
  if (!(this->r2c1() <= 0 && this->r2c1() >= 0)) {
    total_size += 1 + 8;
  }

  // double r2c2 = 11;
  if (!(this->r2c2() <= 0 && this->r2c2() >= 0)) {
    total_size += 1 + 8;
  }

  // double r2c3 = 12;
  if (!(this->r2c3() <= 0 && this->r2c3() >= 0)) {
    total_size += 1 + 8;
  }

  // double r3c0 = 13;
  if (!(this->r3c0() <= 0 && this->r3c0() >= 0)) {
    total_size += 1 + 8;
  }

  // double r3c1 = 14;
  if (!(this->r3c1() <= 0 && this->r3c1() >= 0)) {
    total_size += 1 + 8;
  }

  // double r3c2 = 15;
  if (!(this->r3c2() <= 0 && this->r3c2() >= 0)) {
    total_size += 1 + 8;
  }

  // double r3c3 = 16;
  if (!(this->r3c3() <= 0 && this->r3c3() >= 0)) {
    total_size += 2 + 8;
  }

  // bool update = 17;
  if (this->update() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MatrixBlock::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.MatrixBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const MatrixBlock* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MatrixBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.MatrixBlock)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.MatrixBlock)
    MergeFrom(*source);
  }
}

void MatrixBlock::MergeFrom(const MatrixBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.MatrixBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.r0c0() <= 0 && from.r0c0() >= 0)) {
    _internal_set_r0c0(from._internal_r0c0());
  }
  if (!(from.r0c1() <= 0 && from.r0c1() >= 0)) {
    _internal_set_r0c1(from._internal_r0c1());
  }
  if (!(from.r0c2() <= 0 && from.r0c2() >= 0)) {
    _internal_set_r0c2(from._internal_r0c2());
  }
  if (!(from.r0c3() <= 0 && from.r0c3() >= 0)) {
    _internal_set_r0c3(from._internal_r0c3());
  }
  if (!(from.r1c0() <= 0 && from.r1c0() >= 0)) {
    _internal_set_r1c0(from._internal_r1c0());
  }
  if (!(from.r1c1() <= 0 && from.r1c1() >= 0)) {
    _internal_set_r1c1(from._internal_r1c1());
  }
  if (!(from.r1c2() <= 0 && from.r1c2() >= 0)) {
    _internal_set_r1c2(from._internal_r1c2());
  }
  if (!(from.r1c3() <= 0 && from.r1c3() >= 0)) {
    _internal_set_r1c3(from._internal_r1c3());
  }
  if (!(from.r2c0() <= 0 && from.r2c0() >= 0)) {
    _internal_set_r2c0(from._internal_r2c0());
  }
  if (!(from.r2c1() <= 0 && from.r2c1() >= 0)) {
    _internal_set_r2c1(from._internal_r2c1());
  }
  if (!(from.r2c2() <= 0 && from.r2c2() >= 0)) {
    _internal_set_r2c2(from._internal_r2c2());
  }
  if (!(from.r2c3() <= 0 && from.r2c3() >= 0)) {
    _internal_set_r2c3(from._internal_r2c3());
  }
  if (!(from.r3c0() <= 0 && from.r3c0() >= 0)) {
    _internal_set_r3c0(from._internal_r3c0());
  }
  if (!(from.r3c1() <= 0 && from.r3c1() >= 0)) {
    _internal_set_r3c1(from._internal_r3c1());
  }
  if (!(from.r3c2() <= 0 && from.r3c2() >= 0)) {
    _internal_set_r3c2(from._internal_r3c2());
  }
  if (!(from.r3c3() <= 0 && from.r3c3() >= 0)) {
    _internal_set_r3c3(from._internal_r3c3());
  }
  if (from.update() != 0) {
    _internal_set_update(from._internal_update());
  }
}

void MatrixBlock::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.MatrixBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatrixBlock::CopyFrom(const MatrixBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.MatrixBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatrixBlock::IsInitialized() const {
  return true;
}

void MatrixBlock::InternalSwap(MatrixBlock* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(r0c0_, other->r0c0_);
  swap(r0c1_, other->r0c1_);
  swap(r0c2_, other->r0c2_);
  swap(r0c3_, other->r0c3_);
  swap(r1c0_, other->r1c0_);
  swap(r1c1_, other->r1c1_);
  swap(r1c2_, other->r1c2_);
  swap(r1c3_, other->r1c3_);
  swap(r2c0_, other->r2c0_);
  swap(r2c1_, other->r2c1_);
  swap(r2c2_, other->r2c2_);
  swap(r2c3_, other->r2c3_);
  swap(r3c0_, other->r3c0_);
  swap(r3c1_, other->r3c1_);
  swap(r3c2_, other->r3c2_);
  swap(r3c3_, other->r3c3_);
  swap(update_, other->update_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MatrixBlock::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Request::InitAsDefaultInstance() {
}
class Request::_Internal {
 public:
};

Request::Request()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.Request)
}
Request::Request(const Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ARConnection.Request)
}

void Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Request_ARConnection_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:ARConnection.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Request& Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Request_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ARConnection.Request.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ARConnection.Request.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::InternalSwap(Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IMUPoint::InitAsDefaultInstance() {
}
class IMUPoint::_Internal {
 public:
};

IMUPoint::IMUPoint()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.IMUPoint)
}
IMUPoint::IMUPoint(const IMUPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ax_, &from.ax_,
    static_cast<size_t>(reinterpret_cast<char*>(&wz_) -
    reinterpret_cast<char*>(&ax_)) + sizeof(wz_));
  // @@protoc_insertion_point(copy_constructor:ARConnection.IMUPoint)
}

void IMUPoint::SharedCtor() {
  ::memset(&ax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wz_) -
      reinterpret_cast<char*>(&ax_)) + sizeof(wz_));
}

IMUPoint::~IMUPoint() {
  // @@protoc_insertion_point(destructor:ARConnection.IMUPoint)
  SharedDtor();
}

void IMUPoint::SharedDtor() {
}

void IMUPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IMUPoint& IMUPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IMUPoint_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void IMUPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.IMUPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ax_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wz_) -
      reinterpret_cast<char*>(&ax_)) + sizeof(wz_));
  _internal_metadata_.Clear();
}

const char* IMUPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double ax = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          ax_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double ay = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          ay_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double az = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          az_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double wx = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          wx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double wy = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          wy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double wz = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          wz_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IMUPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.IMUPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double ax = 1;
  if (!(this->ax() <= 0 && this->ax() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_ax(), target);
  }

  // double ay = 2;
  if (!(this->ay() <= 0 && this->ay() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_ay(), target);
  }

  // double az = 3;
  if (!(this->az() <= 0 && this->az() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_az(), target);
  }

  // double wx = 4;
  if (!(this->wx() <= 0 && this->wx() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_wx(), target);
  }

  // double wy = 5;
  if (!(this->wy() <= 0 && this->wy() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_wy(), target);
  }

  // double wz = 6;
  if (!(this->wz() <= 0 && this->wz() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_wz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.IMUPoint)
  return target;
}

size_t IMUPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.IMUPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double ax = 1;
  if (!(this->ax() <= 0 && this->ax() >= 0)) {
    total_size += 1 + 8;
  }

  // double ay = 2;
  if (!(this->ay() <= 0 && this->ay() >= 0)) {
    total_size += 1 + 8;
  }

  // double az = 3;
  if (!(this->az() <= 0 && this->az() >= 0)) {
    total_size += 1 + 8;
  }

  // double wx = 4;
  if (!(this->wx() <= 0 && this->wx() >= 0)) {
    total_size += 1 + 8;
  }

  // double wy = 5;
  if (!(this->wy() <= 0 && this->wy() >= 0)) {
    total_size += 1 + 8;
  }

  // double wz = 6;
  if (!(this->wz() <= 0 && this->wz() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IMUPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.IMUPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const IMUPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IMUPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.IMUPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.IMUPoint)
    MergeFrom(*source);
  }
}

void IMUPoint::MergeFrom(const IMUPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.IMUPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.ax() <= 0 && from.ax() >= 0)) {
    _internal_set_ax(from._internal_ax());
  }
  if (!(from.ay() <= 0 && from.ay() >= 0)) {
    _internal_set_ay(from._internal_ay());
  }
  if (!(from.az() <= 0 && from.az() >= 0)) {
    _internal_set_az(from._internal_az());
  }
  if (!(from.wx() <= 0 && from.wx() >= 0)) {
    _internal_set_wx(from._internal_wx());
  }
  if (!(from.wy() <= 0 && from.wy() >= 0)) {
    _internal_set_wy(from._internal_wy());
  }
  if (!(from.wz() <= 0 && from.wz() >= 0)) {
    _internal_set_wz(from._internal_wz());
  }
}

void IMUPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.IMUPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IMUPoint::CopyFrom(const IMUPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.IMUPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IMUPoint::IsInitialized() const {
  return true;
}

void IMUPoint::InternalSwap(IMUPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(ax_, other->ax_);
  swap(ay_, other->ay_);
  swap(az_, other->az_);
  swap(wx_, other->wx_);
  swap(wy_, other->wy_);
  swap(wz_, other->wz_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IMUPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ImageBlock::InitAsDefaultInstance() {
}
class ImageBlock::_Internal {
 public:
};

ImageBlock::ImageBlock()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.ImageBlock)
}
ImageBlock::ImageBlock(const ImageBlock& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:ARConnection.ImageBlock)
}

void ImageBlock::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImageBlock_ARConnection_2eproto.base);
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  size_ = PROTOBUF_LONGLONG(0);
}

ImageBlock::~ImageBlock() {
  // @@protoc_insertion_point(destructor:ARConnection.ImageBlock)
  SharedDtor();
}

void ImageBlock::SharedDtor() {
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImageBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImageBlock& ImageBlock::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImageBlock_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void ImageBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.ImageBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  image_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  size_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ImageBlock::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ARConnection.IMUPoint points = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_points(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImageBlock::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.ImageBlock)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 size = 1;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_size(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_image(), target);
  }

  // repeated .ARConnection.IMUPoint points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_points_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_points(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.ImageBlock)
  return target;
}

size_t ImageBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.ImageBlock)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ARConnection.IMUPoint points = 3;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->points_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_image());
  }

  // int64 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageBlock::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.ImageBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageBlock* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImageBlock>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.ImageBlock)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.ImageBlock)
    MergeFrom(*source);
  }
}

void ImageBlock::MergeFrom(const ImageBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.ImageBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void ImageBlock::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.ImageBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageBlock::CopyFrom(const ImageBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.ImageBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageBlock::IsInitialized() const {
  return true;
}

void ImageBlock::InternalSwap(ImageBlock* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  points_.InternalSwap(&other->points_);
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImageBlock::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
class Response::_Internal {
 public:
};

Response::Response()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.Response)
}
Response::Response(const Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_status().empty()) {
    status_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  // @@protoc_insertion_point(copy_constructor:ARConnection.Response)
}

void Response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Response_ARConnection_2eproto.base);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:ARConnection.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Response& Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Response_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ARConnection.Response.status"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ARConnection.Response.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::InternalSwap(Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  status_.Swap(&other->status_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjPosition::InitAsDefaultInstance() {
}
class ObjPosition::_Internal {
 public:
};

ObjPosition::ObjPosition()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.ObjPosition)
}
ObjPosition::ObjPosition(const ObjPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ARConnection.ObjPosition)
}

void ObjPosition::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

ObjPosition::~ObjPosition() {
  // @@protoc_insertion_point(destructor:ARConnection.ObjPosition)
  SharedDtor();
}

void ObjPosition::SharedDtor() {
}

void ObjPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjPosition& ObjPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjPosition_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void ObjPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.ObjPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

const char* ObjPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.ObjPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // double y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // double z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.ObjPosition)
  return target;
}

size_t ObjPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.ObjPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.ObjPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.ObjPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.ObjPosition)
    MergeFrom(*source);
  }
}

void ObjPosition::MergeFrom(const ObjPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.ObjPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void ObjPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.ObjPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjPosition::CopyFrom(const ObjPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.ObjPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjPosition::IsInitialized() const {
  return true;
}

void ObjPosition::InternalSwap(ObjPosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectPosition::InitAsDefaultInstance() {
}
class ObjectPosition::_Internal {
 public:
};

ObjectPosition::ObjectPosition()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.ObjectPosition)
}
ObjectPosition::ObjectPosition(const ObjectPosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ARConnection.ObjectPosition)
}

void ObjectPosition::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

ObjectPosition::~ObjectPosition() {
  // @@protoc_insertion_point(destructor:ARConnection.ObjectPosition)
  SharedDtor();
}

void ObjectPosition::SharedDtor() {
}

void ObjectPosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectPosition& ObjectPosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectPosition_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void ObjectPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.ObjectPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

const char* ObjectPosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectPosition::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.ObjectPosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // double y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // double z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.ObjectPosition)
  return target;
}

size_t ObjectPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.ObjectPosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectPosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.ObjectPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectPosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.ObjectPosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.ObjectPosition)
    MergeFrom(*source);
  }
}

void ObjectPosition::MergeFrom(const ObjectPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.ObjectPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void ObjectPosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.ObjectPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPosition::CopyFrom(const ObjectPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.ObjectPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPosition::IsInitialized() const {
  return true;
}

void ObjectPosition::InternalSwap(ObjectPosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectPosition::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectInfo::InitAsDefaultInstance() {
  ::ARConnection::_ObjectInfo_default_instance_._instance.get_mutable()->position_ = const_cast< ::ARConnection::ObjectPosition*>(
      ::ARConnection::ObjectPosition::internal_default_instance());
}
class ObjectInfo::_Internal {
 public:
  static const ::ARConnection::ObjectPosition& position(const ObjectInfo* msg);
};

const ::ARConnection::ObjectPosition&
ObjectInfo::_Internal::position(const ObjectInfo* msg) {
  return *msg->position_;
}
ObjectInfo::ObjectInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.ObjectInfo)
}
ObjectInfo::ObjectInfo(const ObjectInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from._internal_has_position()) {
    position_ = new ::ARConnection::ObjectPosition(*from.position_);
  } else {
    position_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ARConnection.ObjectInfo)
}

void ObjectInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectInfo_ARConnection_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  position_ = nullptr;
}

ObjectInfo::~ObjectInfo() {
  // @@protoc_insertion_point(destructor:ARConnection.ObjectInfo)
  SharedDtor();
}

void ObjectInfo::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
}

void ObjectInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectInfo& ObjectInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectInfo_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void ObjectInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.ObjectInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ObjectInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ARConnection.ObjectInfo.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ARConnection.ObjectPosition position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.ObjectInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ARConnection.ObjectInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ARConnection.ObjectPosition position = 2;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::position(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.ObjectInfo)
  return target;
}

size_t ObjectInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.ObjectInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ARConnection.ObjectPosition position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.ObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.ObjectInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.ObjectInfo)
    MergeFrom(*source);
  }
}

void ObjectInfo::MergeFrom(const ObjectInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.ObjectInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_position()) {
    _internal_mutable_position()->::ARConnection::ObjectPosition::MergeFrom(from._internal_position());
  }
}

void ObjectInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.ObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectInfo::CopyFrom(const ObjectInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.ObjectInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectInfo::IsInitialized() const {
  return true;
}

void ObjectInfo::InternalSwap(ObjectInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectInfoList::InitAsDefaultInstance() {
}
class ObjectInfoList::_Internal {
 public:
};

ObjectInfoList::ObjectInfoList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ARConnection.ObjectInfoList)
}
ObjectInfoList::ObjectInfoList(const ObjectInfoList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ARConnection.ObjectInfoList)
}

void ObjectInfoList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectInfoList_ARConnection_2eproto.base);
}

ObjectInfoList::~ObjectInfoList() {
  // @@protoc_insertion_point(destructor:ARConnection.ObjectInfoList)
  SharedDtor();
}

void ObjectInfoList::SharedDtor() {
}

void ObjectInfoList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectInfoList& ObjectInfoList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectInfoList_ARConnection_2eproto.base);
  return *internal_default_instance();
}


void ObjectInfoList::Clear() {
// @@protoc_insertion_point(message_clear_start:ARConnection.ObjectInfoList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objects_.Clear();
  _internal_metadata_.Clear();
}

const char* ObjectInfoList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ARConnection.ObjectInfo objects = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectInfoList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ARConnection.ObjectInfoList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ARConnection.ObjectInfo objects = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_objects(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ARConnection.ObjectInfoList)
  return target;
}

size_t ObjectInfoList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ARConnection.ObjectInfoList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ARConnection.ObjectInfo objects = 1;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectInfoList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ARConnection.ObjectInfoList)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectInfoList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectInfoList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ARConnection.ObjectInfoList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ARConnection.ObjectInfoList)
    MergeFrom(*source);
  }
}

void ObjectInfoList::MergeFrom(const ObjectInfoList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ARConnection.ObjectInfoList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objects_.MergeFrom(from.objects_);
}

void ObjectInfoList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ARConnection.ObjectInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectInfoList::CopyFrom(const ObjectInfoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ARConnection.ObjectInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectInfoList::IsInitialized() const {
  return true;
}

void ObjectInfoList::InternalSwap(ObjectInfoList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  objects_.InternalSwap(&other->objects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectInfoList::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ARConnection
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ARConnection::MatrixBlock* Arena::CreateMaybeMessage< ::ARConnection::MatrixBlock >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::MatrixBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::ARConnection::Request* Arena::CreateMaybeMessage< ::ARConnection::Request >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::Request >(arena);
}
template<> PROTOBUF_NOINLINE ::ARConnection::IMUPoint* Arena::CreateMaybeMessage< ::ARConnection::IMUPoint >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::IMUPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::ARConnection::ImageBlock* Arena::CreateMaybeMessage< ::ARConnection::ImageBlock >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::ImageBlock >(arena);
}
template<> PROTOBUF_NOINLINE ::ARConnection::Response* Arena::CreateMaybeMessage< ::ARConnection::Response >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::Response >(arena);
}
template<> PROTOBUF_NOINLINE ::ARConnection::ObjPosition* Arena::CreateMaybeMessage< ::ARConnection::ObjPosition >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::ObjPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::ARConnection::ObjectPosition* Arena::CreateMaybeMessage< ::ARConnection::ObjectPosition >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::ObjectPosition >(arena);
}
template<> PROTOBUF_NOINLINE ::ARConnection::ObjectInfo* Arena::CreateMaybeMessage< ::ARConnection::ObjectInfo >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::ObjectInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ARConnection::ObjectInfoList* Arena::CreateMaybeMessage< ::ARConnection::ObjectInfoList >(Arena* arena) {
  return Arena::CreateInternal< ::ARConnection::ObjectInfoList >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
