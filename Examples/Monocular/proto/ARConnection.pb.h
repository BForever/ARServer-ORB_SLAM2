// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ARConnection.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ARConnection_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ARConnection_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ARConnection_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ARConnection_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ARConnection_2eproto;
namespace ARConnection {
class IMUPoint;
class IMUPointDefaultTypeInternal;
extern IMUPointDefaultTypeInternal _IMUPoint_default_instance_;
class ImageBlock;
class ImageBlockDefaultTypeInternal;
extern ImageBlockDefaultTypeInternal _ImageBlock_default_instance_;
class MatrixBlock;
class MatrixBlockDefaultTypeInternal;
extern MatrixBlockDefaultTypeInternal _MatrixBlock_default_instance_;
class ObjPosition;
class ObjPositionDefaultTypeInternal;
extern ObjPositionDefaultTypeInternal _ObjPosition_default_instance_;
class ObjectInfo;
class ObjectInfoDefaultTypeInternal;
extern ObjectInfoDefaultTypeInternal _ObjectInfo_default_instance_;
class ObjectInfoList;
class ObjectInfoListDefaultTypeInternal;
extern ObjectInfoListDefaultTypeInternal _ObjectInfoList_default_instance_;
class ObjectPosition;
class ObjectPositionDefaultTypeInternal;
extern ObjectPositionDefaultTypeInternal _ObjectPosition_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace ARConnection
PROTOBUF_NAMESPACE_OPEN
template<> ::ARConnection::IMUPoint* Arena::CreateMaybeMessage<::ARConnection::IMUPoint>(Arena*);
template<> ::ARConnection::ImageBlock* Arena::CreateMaybeMessage<::ARConnection::ImageBlock>(Arena*);
template<> ::ARConnection::MatrixBlock* Arena::CreateMaybeMessage<::ARConnection::MatrixBlock>(Arena*);
template<> ::ARConnection::ObjPosition* Arena::CreateMaybeMessage<::ARConnection::ObjPosition>(Arena*);
template<> ::ARConnection::ObjectInfo* Arena::CreateMaybeMessage<::ARConnection::ObjectInfo>(Arena*);
template<> ::ARConnection::ObjectInfoList* Arena::CreateMaybeMessage<::ARConnection::ObjectInfoList>(Arena*);
template<> ::ARConnection::ObjectPosition* Arena::CreateMaybeMessage<::ARConnection::ObjectPosition>(Arena*);
template<> ::ARConnection::Request* Arena::CreateMaybeMessage<::ARConnection::Request>(Arena*);
template<> ::ARConnection::Response* Arena::CreateMaybeMessage<::ARConnection::Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ARConnection {

// ===================================================================

class MatrixBlock :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.MatrixBlock) */ {
 public:
  MatrixBlock();
  virtual ~MatrixBlock();

  MatrixBlock(const MatrixBlock& from);
  MatrixBlock(MatrixBlock&& from) noexcept
    : MatrixBlock() {
    *this = ::std::move(from);
  }

  inline MatrixBlock& operator=(const MatrixBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline MatrixBlock& operator=(MatrixBlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MatrixBlock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatrixBlock* internal_default_instance() {
    return reinterpret_cast<const MatrixBlock*>(
               &_MatrixBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MatrixBlock& a, MatrixBlock& b) {
    a.Swap(&b);
  }
  inline void Swap(MatrixBlock* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MatrixBlock* New() const final {
    return CreateMaybeMessage<MatrixBlock>(nullptr);
  }

  MatrixBlock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MatrixBlock>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MatrixBlock& from);
  void MergeFrom(const MatrixBlock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MatrixBlock* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.MatrixBlock";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kR0C0FieldNumber = 1,
    kR0C1FieldNumber = 2,
    kR0C2FieldNumber = 3,
    kR0C3FieldNumber = 4,
    kR1C0FieldNumber = 5,
    kR1C1FieldNumber = 6,
    kR1C2FieldNumber = 7,
    kR1C3FieldNumber = 8,
    kR2C0FieldNumber = 9,
    kR2C1FieldNumber = 10,
    kR2C2FieldNumber = 11,
    kR2C3FieldNumber = 12,
    kR3C0FieldNumber = 13,
    kR3C1FieldNumber = 14,
    kR3C2FieldNumber = 15,
    kR3C3FieldNumber = 16,
    kUpdateFieldNumber = 17,
  };
  // double r0c0 = 1;
  void clear_r0c0();
  double r0c0() const;
  void set_r0c0(double value);
  private:
  double _internal_r0c0() const;
  void _internal_set_r0c0(double value);
  public:

  // double r0c1 = 2;
  void clear_r0c1();
  double r0c1() const;
  void set_r0c1(double value);
  private:
  double _internal_r0c1() const;
  void _internal_set_r0c1(double value);
  public:

  // double r0c2 = 3;
  void clear_r0c2();
  double r0c2() const;
  void set_r0c2(double value);
  private:
  double _internal_r0c2() const;
  void _internal_set_r0c2(double value);
  public:

  // double r0c3 = 4;
  void clear_r0c3();
  double r0c3() const;
  void set_r0c3(double value);
  private:
  double _internal_r0c3() const;
  void _internal_set_r0c3(double value);
  public:

  // double r1c0 = 5;
  void clear_r1c0();
  double r1c0() const;
  void set_r1c0(double value);
  private:
  double _internal_r1c0() const;
  void _internal_set_r1c0(double value);
  public:

  // double r1c1 = 6;
  void clear_r1c1();
  double r1c1() const;
  void set_r1c1(double value);
  private:
  double _internal_r1c1() const;
  void _internal_set_r1c1(double value);
  public:

  // double r1c2 = 7;
  void clear_r1c2();
  double r1c2() const;
  void set_r1c2(double value);
  private:
  double _internal_r1c2() const;
  void _internal_set_r1c2(double value);
  public:

  // double r1c3 = 8;
  void clear_r1c3();
  double r1c3() const;
  void set_r1c3(double value);
  private:
  double _internal_r1c3() const;
  void _internal_set_r1c3(double value);
  public:

  // double r2c0 = 9;
  void clear_r2c0();
  double r2c0() const;
  void set_r2c0(double value);
  private:
  double _internal_r2c0() const;
  void _internal_set_r2c0(double value);
  public:

  // double r2c1 = 10;
  void clear_r2c1();
  double r2c1() const;
  void set_r2c1(double value);
  private:
  double _internal_r2c1() const;
  void _internal_set_r2c1(double value);
  public:

  // double r2c2 = 11;
  void clear_r2c2();
  double r2c2() const;
  void set_r2c2(double value);
  private:
  double _internal_r2c2() const;
  void _internal_set_r2c2(double value);
  public:

  // double r2c3 = 12;
  void clear_r2c3();
  double r2c3() const;
  void set_r2c3(double value);
  private:
  double _internal_r2c3() const;
  void _internal_set_r2c3(double value);
  public:

  // double r3c0 = 13;
  void clear_r3c0();
  double r3c0() const;
  void set_r3c0(double value);
  private:
  double _internal_r3c0() const;
  void _internal_set_r3c0(double value);
  public:

  // double r3c1 = 14;
  void clear_r3c1();
  double r3c1() const;
  void set_r3c1(double value);
  private:
  double _internal_r3c1() const;
  void _internal_set_r3c1(double value);
  public:

  // double r3c2 = 15;
  void clear_r3c2();
  double r3c2() const;
  void set_r3c2(double value);
  private:
  double _internal_r3c2() const;
  void _internal_set_r3c2(double value);
  public:

  // double r3c3 = 16;
  void clear_r3c3();
  double r3c3() const;
  void set_r3c3(double value);
  private:
  double _internal_r3c3() const;
  void _internal_set_r3c3(double value);
  public:

  // bool update = 17;
  void clear_update();
  bool update() const;
  void set_update(bool value);
  private:
  bool _internal_update() const;
  void _internal_set_update(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ARConnection.MatrixBlock)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double r0c0_;
  double r0c1_;
  double r0c2_;
  double r0c3_;
  double r1c0_;
  double r1c1_;
  double r1c2_;
  double r1c3_;
  double r2c0_;
  double r2c1_;
  double r2c2_;
  double r2c3_;
  double r3c0_;
  double r3c1_;
  double r3c2_;
  double r3c3_;
  bool update_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// -------------------------------------------------------------------

class Request :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }
  inline void Swap(Request* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const final {
    return CreateMaybeMessage<Request>(nullptr);
  }

  Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.Request";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:ARConnection.Request)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// -------------------------------------------------------------------

class IMUPoint :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.IMUPoint) */ {
 public:
  IMUPoint();
  virtual ~IMUPoint();

  IMUPoint(const IMUPoint& from);
  IMUPoint(IMUPoint&& from) noexcept
    : IMUPoint() {
    *this = ::std::move(from);
  }

  inline IMUPoint& operator=(const IMUPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline IMUPoint& operator=(IMUPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IMUPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMUPoint* internal_default_instance() {
    return reinterpret_cast<const IMUPoint*>(
               &_IMUPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(IMUPoint& a, IMUPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(IMUPoint* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IMUPoint* New() const final {
    return CreateMaybeMessage<IMUPoint>(nullptr);
  }

  IMUPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IMUPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IMUPoint& from);
  void MergeFrom(const IMUPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMUPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.IMUPoint";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAxFieldNumber = 1,
    kAyFieldNumber = 2,
    kAzFieldNumber = 3,
    kWxFieldNumber = 4,
    kWyFieldNumber = 5,
    kWzFieldNumber = 6,
  };
  // double ax = 1;
  void clear_ax();
  double ax() const;
  void set_ax(double value);
  private:
  double _internal_ax() const;
  void _internal_set_ax(double value);
  public:

  // double ay = 2;
  void clear_ay();
  double ay() const;
  void set_ay(double value);
  private:
  double _internal_ay() const;
  void _internal_set_ay(double value);
  public:

  // double az = 3;
  void clear_az();
  double az() const;
  void set_az(double value);
  private:
  double _internal_az() const;
  void _internal_set_az(double value);
  public:

  // double wx = 4;
  void clear_wx();
  double wx() const;
  void set_wx(double value);
  private:
  double _internal_wx() const;
  void _internal_set_wx(double value);
  public:

  // double wy = 5;
  void clear_wy();
  double wy() const;
  void set_wy(double value);
  private:
  double _internal_wy() const;
  void _internal_set_wy(double value);
  public:

  // double wz = 6;
  void clear_wz();
  double wz() const;
  void set_wz(double value);
  private:
  double _internal_wz() const;
  void _internal_set_wz(double value);
  public:

  // @@protoc_insertion_point(class_scope:ARConnection.IMUPoint)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double ax_;
  double ay_;
  double az_;
  double wx_;
  double wy_;
  double wz_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// -------------------------------------------------------------------

class ImageBlock :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.ImageBlock) */ {
 public:
  ImageBlock();
  virtual ~ImageBlock();

  ImageBlock(const ImageBlock& from);
  ImageBlock(ImageBlock&& from) noexcept
    : ImageBlock() {
    *this = ::std::move(from);
  }

  inline ImageBlock& operator=(const ImageBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageBlock& operator=(ImageBlock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImageBlock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageBlock* internal_default_instance() {
    return reinterpret_cast<const ImageBlock*>(
               &_ImageBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ImageBlock& a, ImageBlock& b) {
    a.Swap(&b);
  }
  inline void Swap(ImageBlock* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImageBlock* New() const final {
    return CreateMaybeMessage<ImageBlock>(nullptr);
  }

  ImageBlock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImageBlock>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImageBlock& from);
  void MergeFrom(const ImageBlock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageBlock* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.ImageBlock";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 3,
    kImageFieldNumber = 2,
    kSizeFieldNumber = 1,
  };
  // repeated .ARConnection.IMUPoint points = 3;
  int points_size() const;
  private:
  int _internal_points_size() const;
  public:
  void clear_points();
  ::ARConnection::IMUPoint* mutable_points(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::IMUPoint >*
      mutable_points();
  private:
  const ::ARConnection::IMUPoint& _internal_points(int index) const;
  ::ARConnection::IMUPoint* _internal_add_points();
  public:
  const ::ARConnection::IMUPoint& points(int index) const;
  ::ARConnection::IMUPoint* add_points();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::IMUPoint >&
      points() const;

  // bytes image = 2;
  void clear_image();
  const std::string& image() const;
  void set_image(const std::string& value);
  void set_image(std::string&& value);
  void set_image(const char* value);
  void set_image(const void* value, size_t size);
  std::string* mutable_image();
  std::string* release_image();
  void set_allocated_image(std::string* image);
  private:
  const std::string& _internal_image() const;
  void _internal_set_image(const std::string& value);
  std::string* _internal_mutable_image();
  public:

  // int64 size = 1;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::int64 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ARConnection.ImageBlock)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::IMUPoint > points_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_;
  ::PROTOBUF_NAMESPACE_ID::int64 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// -------------------------------------------------------------------

class Response :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }
  inline void Swap(Response* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const final {
    return CreateMaybeMessage<Response>(nullptr);
  }

  Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.Response";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // string status = 1;
  void clear_status();
  const std::string& status() const;
  void set_status(const std::string& value);
  void set_status(std::string&& value);
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  std::string* mutable_status();
  std::string* release_status();
  void set_allocated_status(std::string* status);
  private:
  const std::string& _internal_status() const;
  void _internal_set_status(const std::string& value);
  std::string* _internal_mutable_status();
  public:

  // @@protoc_insertion_point(class_scope:ARConnection.Response)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// -------------------------------------------------------------------

class ObjPosition :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.ObjPosition) */ {
 public:
  ObjPosition();
  virtual ~ObjPosition();

  ObjPosition(const ObjPosition& from);
  ObjPosition(ObjPosition&& from) noexcept
    : ObjPosition() {
    *this = ::std::move(from);
  }

  inline ObjPosition& operator=(const ObjPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjPosition& operator=(ObjPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjPosition* internal_default_instance() {
    return reinterpret_cast<const ObjPosition*>(
               &_ObjPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ObjPosition& a, ObjPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjPosition* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjPosition* New() const final {
    return CreateMaybeMessage<ObjPosition>(nullptr);
  }

  ObjPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjPosition& from);
  void MergeFrom(const ObjPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.ObjPosition";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 2;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // double z = 3;
  void clear_z();
  double z() const;
  void set_z(double value);
  private:
  double _internal_z() const;
  void _internal_set_z(double value);
  public:

  // @@protoc_insertion_point(class_scope:ARConnection.ObjPosition)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// -------------------------------------------------------------------

class ObjectPosition :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.ObjectPosition) */ {
 public:
  ObjectPosition();
  virtual ~ObjectPosition();

  ObjectPosition(const ObjectPosition& from);
  ObjectPosition(ObjectPosition&& from) noexcept
    : ObjectPosition() {
    *this = ::std::move(from);
  }

  inline ObjectPosition& operator=(const ObjectPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectPosition& operator=(ObjectPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectPosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectPosition* internal_default_instance() {
    return reinterpret_cast<const ObjectPosition*>(
               &_ObjectPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ObjectPosition& a, ObjectPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectPosition* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectPosition* New() const final {
    return CreateMaybeMessage<ObjectPosition>(nullptr);
  }

  ObjectPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectPosition& from);
  void MergeFrom(const ObjectPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.ObjectPosition";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // double x = 1;
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // double y = 2;
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // double z = 3;
  void clear_z();
  double z() const;
  void set_z(double value);
  private:
  double _internal_z() const;
  void _internal_set_z(double value);
  public:

  // @@protoc_insertion_point(class_scope:ARConnection.ObjectPosition)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// -------------------------------------------------------------------

class ObjectInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.ObjectInfo) */ {
 public:
  ObjectInfo();
  virtual ~ObjectInfo();

  ObjectInfo(const ObjectInfo& from);
  ObjectInfo(ObjectInfo&& from) noexcept
    : ObjectInfo() {
    *this = ::std::move(from);
  }

  inline ObjectInfo& operator=(const ObjectInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectInfo& operator=(ObjectInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectInfo* internal_default_instance() {
    return reinterpret_cast<const ObjectInfo*>(
               &_ObjectInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ObjectInfo& a, ObjectInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectInfo* New() const final {
    return CreateMaybeMessage<ObjectInfo>(nullptr);
  }

  ObjectInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectInfo& from);
  void MergeFrom(const ObjectInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.ObjectInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kPositionFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .ARConnection.ObjectPosition position = 2;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::ARConnection::ObjectPosition& position() const;
  ::ARConnection::ObjectPosition* release_position();
  ::ARConnection::ObjectPosition* mutable_position();
  void set_allocated_position(::ARConnection::ObjectPosition* position);
  private:
  const ::ARConnection::ObjectPosition& _internal_position() const;
  ::ARConnection::ObjectPosition* _internal_mutable_position();
  public:

  // @@protoc_insertion_point(class_scope:ARConnection.ObjectInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::ARConnection::ObjectPosition* position_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// -------------------------------------------------------------------

class ObjectInfoList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ARConnection.ObjectInfoList) */ {
 public:
  ObjectInfoList();
  virtual ~ObjectInfoList();

  ObjectInfoList(const ObjectInfoList& from);
  ObjectInfoList(ObjectInfoList&& from) noexcept
    : ObjectInfoList() {
    *this = ::std::move(from);
  }

  inline ObjectInfoList& operator=(const ObjectInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectInfoList& operator=(ObjectInfoList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectInfoList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectInfoList* internal_default_instance() {
    return reinterpret_cast<const ObjectInfoList*>(
               &_ObjectInfoList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ObjectInfoList& a, ObjectInfoList& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectInfoList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectInfoList* New() const final {
    return CreateMaybeMessage<ObjectInfoList>(nullptr);
  }

  ObjectInfoList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectInfoList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectInfoList& from);
  void MergeFrom(const ObjectInfoList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectInfoList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ARConnection.ObjectInfoList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ARConnection_2eproto);
    return ::descriptor_table_ARConnection_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 1,
  };
  // repeated .ARConnection.ObjectInfo objects = 1;
  int objects_size() const;
  private:
  int _internal_objects_size() const;
  public:
  void clear_objects();
  ::ARConnection::ObjectInfo* mutable_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::ObjectInfo >*
      mutable_objects();
  private:
  const ::ARConnection::ObjectInfo& _internal_objects(int index) const;
  ::ARConnection::ObjectInfo* _internal_add_objects();
  public:
  const ::ARConnection::ObjectInfo& objects(int index) const;
  ::ARConnection::ObjectInfo* add_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::ObjectInfo >&
      objects() const;

  // @@protoc_insertion_point(class_scope:ARConnection.ObjectInfoList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::ObjectInfo > objects_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ARConnection_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MatrixBlock

// double r0c0 = 1;
inline void MatrixBlock::clear_r0c0() {
  r0c0_ = 0;
}
inline double MatrixBlock::_internal_r0c0() const {
  return r0c0_;
}
inline double MatrixBlock::r0c0() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r0c0)
  return _internal_r0c0();
}
inline void MatrixBlock::_internal_set_r0c0(double value) {
  
  r0c0_ = value;
}
inline void MatrixBlock::set_r0c0(double value) {
  _internal_set_r0c0(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r0c0)
}

// double r0c1 = 2;
inline void MatrixBlock::clear_r0c1() {
  r0c1_ = 0;
}
inline double MatrixBlock::_internal_r0c1() const {
  return r0c1_;
}
inline double MatrixBlock::r0c1() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r0c1)
  return _internal_r0c1();
}
inline void MatrixBlock::_internal_set_r0c1(double value) {
  
  r0c1_ = value;
}
inline void MatrixBlock::set_r0c1(double value) {
  _internal_set_r0c1(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r0c1)
}

// double r0c2 = 3;
inline void MatrixBlock::clear_r0c2() {
  r0c2_ = 0;
}
inline double MatrixBlock::_internal_r0c2() const {
  return r0c2_;
}
inline double MatrixBlock::r0c2() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r0c2)
  return _internal_r0c2();
}
inline void MatrixBlock::_internal_set_r0c2(double value) {
  
  r0c2_ = value;
}
inline void MatrixBlock::set_r0c2(double value) {
  _internal_set_r0c2(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r0c2)
}

// double r0c3 = 4;
inline void MatrixBlock::clear_r0c3() {
  r0c3_ = 0;
}
inline double MatrixBlock::_internal_r0c3() const {
  return r0c3_;
}
inline double MatrixBlock::r0c3() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r0c3)
  return _internal_r0c3();
}
inline void MatrixBlock::_internal_set_r0c3(double value) {
  
  r0c3_ = value;
}
inline void MatrixBlock::set_r0c3(double value) {
  _internal_set_r0c3(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r0c3)
}

// double r1c0 = 5;
inline void MatrixBlock::clear_r1c0() {
  r1c0_ = 0;
}
inline double MatrixBlock::_internal_r1c0() const {
  return r1c0_;
}
inline double MatrixBlock::r1c0() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r1c0)
  return _internal_r1c0();
}
inline void MatrixBlock::_internal_set_r1c0(double value) {
  
  r1c0_ = value;
}
inline void MatrixBlock::set_r1c0(double value) {
  _internal_set_r1c0(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r1c0)
}

// double r1c1 = 6;
inline void MatrixBlock::clear_r1c1() {
  r1c1_ = 0;
}
inline double MatrixBlock::_internal_r1c1() const {
  return r1c1_;
}
inline double MatrixBlock::r1c1() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r1c1)
  return _internal_r1c1();
}
inline void MatrixBlock::_internal_set_r1c1(double value) {
  
  r1c1_ = value;
}
inline void MatrixBlock::set_r1c1(double value) {
  _internal_set_r1c1(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r1c1)
}

// double r1c2 = 7;
inline void MatrixBlock::clear_r1c2() {
  r1c2_ = 0;
}
inline double MatrixBlock::_internal_r1c2() const {
  return r1c2_;
}
inline double MatrixBlock::r1c2() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r1c2)
  return _internal_r1c2();
}
inline void MatrixBlock::_internal_set_r1c2(double value) {
  
  r1c2_ = value;
}
inline void MatrixBlock::set_r1c2(double value) {
  _internal_set_r1c2(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r1c2)
}

// double r1c3 = 8;
inline void MatrixBlock::clear_r1c3() {
  r1c3_ = 0;
}
inline double MatrixBlock::_internal_r1c3() const {
  return r1c3_;
}
inline double MatrixBlock::r1c3() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r1c3)
  return _internal_r1c3();
}
inline void MatrixBlock::_internal_set_r1c3(double value) {
  
  r1c3_ = value;
}
inline void MatrixBlock::set_r1c3(double value) {
  _internal_set_r1c3(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r1c3)
}

// double r2c0 = 9;
inline void MatrixBlock::clear_r2c0() {
  r2c0_ = 0;
}
inline double MatrixBlock::_internal_r2c0() const {
  return r2c0_;
}
inline double MatrixBlock::r2c0() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r2c0)
  return _internal_r2c0();
}
inline void MatrixBlock::_internal_set_r2c0(double value) {
  
  r2c0_ = value;
}
inline void MatrixBlock::set_r2c0(double value) {
  _internal_set_r2c0(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r2c0)
}

// double r2c1 = 10;
inline void MatrixBlock::clear_r2c1() {
  r2c1_ = 0;
}
inline double MatrixBlock::_internal_r2c1() const {
  return r2c1_;
}
inline double MatrixBlock::r2c1() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r2c1)
  return _internal_r2c1();
}
inline void MatrixBlock::_internal_set_r2c1(double value) {
  
  r2c1_ = value;
}
inline void MatrixBlock::set_r2c1(double value) {
  _internal_set_r2c1(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r2c1)
}

// double r2c2 = 11;
inline void MatrixBlock::clear_r2c2() {
  r2c2_ = 0;
}
inline double MatrixBlock::_internal_r2c2() const {
  return r2c2_;
}
inline double MatrixBlock::r2c2() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r2c2)
  return _internal_r2c2();
}
inline void MatrixBlock::_internal_set_r2c2(double value) {
  
  r2c2_ = value;
}
inline void MatrixBlock::set_r2c2(double value) {
  _internal_set_r2c2(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r2c2)
}

// double r2c3 = 12;
inline void MatrixBlock::clear_r2c3() {
  r2c3_ = 0;
}
inline double MatrixBlock::_internal_r2c3() const {
  return r2c3_;
}
inline double MatrixBlock::r2c3() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r2c3)
  return _internal_r2c3();
}
inline void MatrixBlock::_internal_set_r2c3(double value) {
  
  r2c3_ = value;
}
inline void MatrixBlock::set_r2c3(double value) {
  _internal_set_r2c3(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r2c3)
}

// double r3c0 = 13;
inline void MatrixBlock::clear_r3c0() {
  r3c0_ = 0;
}
inline double MatrixBlock::_internal_r3c0() const {
  return r3c0_;
}
inline double MatrixBlock::r3c0() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r3c0)
  return _internal_r3c0();
}
inline void MatrixBlock::_internal_set_r3c0(double value) {
  
  r3c0_ = value;
}
inline void MatrixBlock::set_r3c0(double value) {
  _internal_set_r3c0(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r3c0)
}

// double r3c1 = 14;
inline void MatrixBlock::clear_r3c1() {
  r3c1_ = 0;
}
inline double MatrixBlock::_internal_r3c1() const {
  return r3c1_;
}
inline double MatrixBlock::r3c1() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r3c1)
  return _internal_r3c1();
}
inline void MatrixBlock::_internal_set_r3c1(double value) {
  
  r3c1_ = value;
}
inline void MatrixBlock::set_r3c1(double value) {
  _internal_set_r3c1(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r3c1)
}

// double r3c2 = 15;
inline void MatrixBlock::clear_r3c2() {
  r3c2_ = 0;
}
inline double MatrixBlock::_internal_r3c2() const {
  return r3c2_;
}
inline double MatrixBlock::r3c2() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r3c2)
  return _internal_r3c2();
}
inline void MatrixBlock::_internal_set_r3c2(double value) {
  
  r3c2_ = value;
}
inline void MatrixBlock::set_r3c2(double value) {
  _internal_set_r3c2(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r3c2)
}

// double r3c3 = 16;
inline void MatrixBlock::clear_r3c3() {
  r3c3_ = 0;
}
inline double MatrixBlock::_internal_r3c3() const {
  return r3c3_;
}
inline double MatrixBlock::r3c3() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.r3c3)
  return _internal_r3c3();
}
inline void MatrixBlock::_internal_set_r3c3(double value) {
  
  r3c3_ = value;
}
inline void MatrixBlock::set_r3c3(double value) {
  _internal_set_r3c3(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.r3c3)
}

// bool update = 17;
inline void MatrixBlock::clear_update() {
  update_ = false;
}
inline bool MatrixBlock::_internal_update() const {
  return update_;
}
inline bool MatrixBlock::update() const {
  // @@protoc_insertion_point(field_get:ARConnection.MatrixBlock.update)
  return _internal_update();
}
inline void MatrixBlock::_internal_set_update(bool value) {
  
  update_ = value;
}
inline void MatrixBlock::set_update(bool value) {
  _internal_set_update(value);
  // @@protoc_insertion_point(field_set:ARConnection.MatrixBlock.update)
}

// -------------------------------------------------------------------

// Request

// string name = 1;
inline void Request::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Request::name() const {
  // @@protoc_insertion_point(field_get:ARConnection.Request.name)
  return _internal_name();
}
inline void Request::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ARConnection.Request.name)
}
inline std::string* Request::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ARConnection.Request.name)
  return _internal_mutable_name();
}
inline const std::string& Request::_internal_name() const {
  return name_.GetNoArena();
}
inline void Request::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Request::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ARConnection.Request.name)
}
inline void Request::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ARConnection.Request.name)
}
inline void Request::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ARConnection.Request.name)
}
inline std::string* Request::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Request::release_name() {
  // @@protoc_insertion_point(field_release:ARConnection.Request.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ARConnection.Request.name)
}

// -------------------------------------------------------------------

// IMUPoint

// double ax = 1;
inline void IMUPoint::clear_ax() {
  ax_ = 0;
}
inline double IMUPoint::_internal_ax() const {
  return ax_;
}
inline double IMUPoint::ax() const {
  // @@protoc_insertion_point(field_get:ARConnection.IMUPoint.ax)
  return _internal_ax();
}
inline void IMUPoint::_internal_set_ax(double value) {
  
  ax_ = value;
}
inline void IMUPoint::set_ax(double value) {
  _internal_set_ax(value);
  // @@protoc_insertion_point(field_set:ARConnection.IMUPoint.ax)
}

// double ay = 2;
inline void IMUPoint::clear_ay() {
  ay_ = 0;
}
inline double IMUPoint::_internal_ay() const {
  return ay_;
}
inline double IMUPoint::ay() const {
  // @@protoc_insertion_point(field_get:ARConnection.IMUPoint.ay)
  return _internal_ay();
}
inline void IMUPoint::_internal_set_ay(double value) {
  
  ay_ = value;
}
inline void IMUPoint::set_ay(double value) {
  _internal_set_ay(value);
  // @@protoc_insertion_point(field_set:ARConnection.IMUPoint.ay)
}

// double az = 3;
inline void IMUPoint::clear_az() {
  az_ = 0;
}
inline double IMUPoint::_internal_az() const {
  return az_;
}
inline double IMUPoint::az() const {
  // @@protoc_insertion_point(field_get:ARConnection.IMUPoint.az)
  return _internal_az();
}
inline void IMUPoint::_internal_set_az(double value) {
  
  az_ = value;
}
inline void IMUPoint::set_az(double value) {
  _internal_set_az(value);
  // @@protoc_insertion_point(field_set:ARConnection.IMUPoint.az)
}

// double wx = 4;
inline void IMUPoint::clear_wx() {
  wx_ = 0;
}
inline double IMUPoint::_internal_wx() const {
  return wx_;
}
inline double IMUPoint::wx() const {
  // @@protoc_insertion_point(field_get:ARConnection.IMUPoint.wx)
  return _internal_wx();
}
inline void IMUPoint::_internal_set_wx(double value) {
  
  wx_ = value;
}
inline void IMUPoint::set_wx(double value) {
  _internal_set_wx(value);
  // @@protoc_insertion_point(field_set:ARConnection.IMUPoint.wx)
}

// double wy = 5;
inline void IMUPoint::clear_wy() {
  wy_ = 0;
}
inline double IMUPoint::_internal_wy() const {
  return wy_;
}
inline double IMUPoint::wy() const {
  // @@protoc_insertion_point(field_get:ARConnection.IMUPoint.wy)
  return _internal_wy();
}
inline void IMUPoint::_internal_set_wy(double value) {
  
  wy_ = value;
}
inline void IMUPoint::set_wy(double value) {
  _internal_set_wy(value);
  // @@protoc_insertion_point(field_set:ARConnection.IMUPoint.wy)
}

// double wz = 6;
inline void IMUPoint::clear_wz() {
  wz_ = 0;
}
inline double IMUPoint::_internal_wz() const {
  return wz_;
}
inline double IMUPoint::wz() const {
  // @@protoc_insertion_point(field_get:ARConnection.IMUPoint.wz)
  return _internal_wz();
}
inline void IMUPoint::_internal_set_wz(double value) {
  
  wz_ = value;
}
inline void IMUPoint::set_wz(double value) {
  _internal_set_wz(value);
  // @@protoc_insertion_point(field_set:ARConnection.IMUPoint.wz)
}

// -------------------------------------------------------------------

// ImageBlock

// int64 size = 1;
inline void ImageBlock::clear_size() {
  size_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ImageBlock::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ImageBlock::size() const {
  // @@protoc_insertion_point(field_get:ARConnection.ImageBlock.size)
  return _internal_size();
}
inline void ImageBlock::_internal_set_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  size_ = value;
}
inline void ImageBlock::set_size(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:ARConnection.ImageBlock.size)
}

// bytes image = 2;
inline void ImageBlock::clear_image() {
  image_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ImageBlock::image() const {
  // @@protoc_insertion_point(field_get:ARConnection.ImageBlock.image)
  return _internal_image();
}
inline void ImageBlock::set_image(const std::string& value) {
  _internal_set_image(value);
  // @@protoc_insertion_point(field_set:ARConnection.ImageBlock.image)
}
inline std::string* ImageBlock::mutable_image() {
  // @@protoc_insertion_point(field_mutable:ARConnection.ImageBlock.image)
  return _internal_mutable_image();
}
inline const std::string& ImageBlock::_internal_image() const {
  return image_.GetNoArena();
}
inline void ImageBlock::_internal_set_image(const std::string& value) {
  
  image_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ImageBlock::set_image(std::string&& value) {
  
  image_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ARConnection.ImageBlock.image)
}
inline void ImageBlock::set_image(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  image_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ARConnection.ImageBlock.image)
}
inline void ImageBlock::set_image(const void* value, size_t size) {
  
  image_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ARConnection.ImageBlock.image)
}
inline std::string* ImageBlock::_internal_mutable_image() {
  
  return image_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ImageBlock::release_image() {
  // @@protoc_insertion_point(field_release:ARConnection.ImageBlock.image)
  
  return image_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ImageBlock::set_allocated_image(std::string* image) {
  if (image != nullptr) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:ARConnection.ImageBlock.image)
}

// repeated .ARConnection.IMUPoint points = 3;
inline int ImageBlock::_internal_points_size() const {
  return points_.size();
}
inline int ImageBlock::points_size() const {
  return _internal_points_size();
}
inline void ImageBlock::clear_points() {
  points_.Clear();
}
inline ::ARConnection::IMUPoint* ImageBlock::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:ARConnection.ImageBlock.points)
  return points_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::IMUPoint >*
ImageBlock::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:ARConnection.ImageBlock.points)
  return &points_;
}
inline const ::ARConnection::IMUPoint& ImageBlock::_internal_points(int index) const {
  return points_.Get(index);
}
inline const ::ARConnection::IMUPoint& ImageBlock::points(int index) const {
  // @@protoc_insertion_point(field_get:ARConnection.ImageBlock.points)
  return _internal_points(index);
}
inline ::ARConnection::IMUPoint* ImageBlock::_internal_add_points() {
  return points_.Add();
}
inline ::ARConnection::IMUPoint* ImageBlock::add_points() {
  // @@protoc_insertion_point(field_add:ARConnection.ImageBlock.points)
  return _internal_add_points();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::IMUPoint >&
ImageBlock::points() const {
  // @@protoc_insertion_point(field_list:ARConnection.ImageBlock.points)
  return points_;
}

// -------------------------------------------------------------------

// Response

// string status = 1;
inline void Response::clear_status() {
  status_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Response::status() const {
  // @@protoc_insertion_point(field_get:ARConnection.Response.status)
  return _internal_status();
}
inline void Response::set_status(const std::string& value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:ARConnection.Response.status)
}
inline std::string* Response::mutable_status() {
  // @@protoc_insertion_point(field_mutable:ARConnection.Response.status)
  return _internal_mutable_status();
}
inline const std::string& Response::_internal_status() const {
  return status_.GetNoArena();
}
inline void Response::_internal_set_status(const std::string& value) {
  
  status_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Response::set_status(std::string&& value) {
  
  status_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ARConnection.Response.status)
}
inline void Response::set_status(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  status_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ARConnection.Response.status)
}
inline void Response::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ARConnection.Response.status)
}
inline std::string* Response::_internal_mutable_status() {
  
  return status_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Response::release_status() {
  // @@protoc_insertion_point(field_release:ARConnection.Response.status)
  
  return status_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_status(std::string* status) {
  if (status != nullptr) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:ARConnection.Response.status)
}

// -------------------------------------------------------------------

// ObjPosition

// double x = 1;
inline void ObjPosition::clear_x() {
  x_ = 0;
}
inline double ObjPosition::_internal_x() const {
  return x_;
}
inline double ObjPosition::x() const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjPosition.x)
  return _internal_x();
}
inline void ObjPosition::_internal_set_x(double value) {
  
  x_ = value;
}
inline void ObjPosition::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:ARConnection.ObjPosition.x)
}

// double y = 2;
inline void ObjPosition::clear_y() {
  y_ = 0;
}
inline double ObjPosition::_internal_y() const {
  return y_;
}
inline double ObjPosition::y() const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjPosition.y)
  return _internal_y();
}
inline void ObjPosition::_internal_set_y(double value) {
  
  y_ = value;
}
inline void ObjPosition::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:ARConnection.ObjPosition.y)
}

// double z = 3;
inline void ObjPosition::clear_z() {
  z_ = 0;
}
inline double ObjPosition::_internal_z() const {
  return z_;
}
inline double ObjPosition::z() const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjPosition.z)
  return _internal_z();
}
inline void ObjPosition::_internal_set_z(double value) {
  
  z_ = value;
}
inline void ObjPosition::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:ARConnection.ObjPosition.z)
}

// -------------------------------------------------------------------

// ObjectPosition

// double x = 1;
inline void ObjectPosition::clear_x() {
  x_ = 0;
}
inline double ObjectPosition::_internal_x() const {
  return x_;
}
inline double ObjectPosition::x() const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjectPosition.x)
  return _internal_x();
}
inline void ObjectPosition::_internal_set_x(double value) {
  
  x_ = value;
}
inline void ObjectPosition::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:ARConnection.ObjectPosition.x)
}

// double y = 2;
inline void ObjectPosition::clear_y() {
  y_ = 0;
}
inline double ObjectPosition::_internal_y() const {
  return y_;
}
inline double ObjectPosition::y() const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjectPosition.y)
  return _internal_y();
}
inline void ObjectPosition::_internal_set_y(double value) {
  
  y_ = value;
}
inline void ObjectPosition::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:ARConnection.ObjectPosition.y)
}

// double z = 3;
inline void ObjectPosition::clear_z() {
  z_ = 0;
}
inline double ObjectPosition::_internal_z() const {
  return z_;
}
inline double ObjectPosition::z() const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjectPosition.z)
  return _internal_z();
}
inline void ObjectPosition::_internal_set_z(double value) {
  
  z_ = value;
}
inline void ObjectPosition::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:ARConnection.ObjectPosition.z)
}

// -------------------------------------------------------------------

// ObjectInfo

// string name = 1;
inline void ObjectInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ObjectInfo::name() const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjectInfo.name)
  return _internal_name();
}
inline void ObjectInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ARConnection.ObjectInfo.name)
}
inline std::string* ObjectInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ARConnection.ObjectInfo.name)
  return _internal_mutable_name();
}
inline const std::string& ObjectInfo::_internal_name() const {
  return name_.GetNoArena();
}
inline void ObjectInfo::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ObjectInfo::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ARConnection.ObjectInfo.name)
}
inline void ObjectInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ARConnection.ObjectInfo.name)
}
inline void ObjectInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ARConnection.ObjectInfo.name)
}
inline std::string* ObjectInfo::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ObjectInfo::release_name() {
  // @@protoc_insertion_point(field_release:ARConnection.ObjectInfo.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ObjectInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ARConnection.ObjectInfo.name)
}

// .ARConnection.ObjectPosition position = 2;
inline bool ObjectInfo::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool ObjectInfo::has_position() const {
  return _internal_has_position();
}
inline void ObjectInfo::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::ARConnection::ObjectPosition& ObjectInfo::_internal_position() const {
  const ::ARConnection::ObjectPosition* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::ARConnection::ObjectPosition*>(
      &::ARConnection::_ObjectPosition_default_instance_);
}
inline const ::ARConnection::ObjectPosition& ObjectInfo::position() const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjectInfo.position)
  return _internal_position();
}
inline ::ARConnection::ObjectPosition* ObjectInfo::release_position() {
  // @@protoc_insertion_point(field_release:ARConnection.ObjectInfo.position)
  
  ::ARConnection::ObjectPosition* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::ARConnection::ObjectPosition* ObjectInfo::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::ARConnection::ObjectPosition>(GetArenaNoVirtual());
    position_ = p;
  }
  return position_;
}
inline ::ARConnection::ObjectPosition* ObjectInfo::mutable_position() {
  // @@protoc_insertion_point(field_mutable:ARConnection.ObjectInfo.position)
  return _internal_mutable_position();
}
inline void ObjectInfo::set_allocated_position(::ARConnection::ObjectPosition* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:ARConnection.ObjectInfo.position)
}

// -------------------------------------------------------------------

// ObjectInfoList

// repeated .ARConnection.ObjectInfo objects = 1;
inline int ObjectInfoList::_internal_objects_size() const {
  return objects_.size();
}
inline int ObjectInfoList::objects_size() const {
  return _internal_objects_size();
}
inline void ObjectInfoList::clear_objects() {
  objects_.Clear();
}
inline ::ARConnection::ObjectInfo* ObjectInfoList::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:ARConnection.ObjectInfoList.objects)
  return objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::ObjectInfo >*
ObjectInfoList::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:ARConnection.ObjectInfoList.objects)
  return &objects_;
}
inline const ::ARConnection::ObjectInfo& ObjectInfoList::_internal_objects(int index) const {
  return objects_.Get(index);
}
inline const ::ARConnection::ObjectInfo& ObjectInfoList::objects(int index) const {
  // @@protoc_insertion_point(field_get:ARConnection.ObjectInfoList.objects)
  return _internal_objects(index);
}
inline ::ARConnection::ObjectInfo* ObjectInfoList::_internal_add_objects() {
  return objects_.Add();
}
inline ::ARConnection::ObjectInfo* ObjectInfoList::add_objects() {
  // @@protoc_insertion_point(field_add:ARConnection.ObjectInfoList.objects)
  return _internal_add_objects();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ARConnection::ObjectInfo >&
ObjectInfoList::objects() const {
  // @@protoc_insertion_point(field_list:ARConnection.ObjectInfoList.objects)
  return objects_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ARConnection

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ARConnection_2eproto
