// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: viewmatrix.proto

#include "viewmatrix.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace viewmatrix {
class MatrixDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Matrix> _instance;
} _Matrix_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Request> _instance;
} _Request_default_instance_;
}  // namespace viewmatrix
static void InitDefaultsscc_info_Matrix_viewmatrix_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::viewmatrix::_Matrix_default_instance_;
    new (ptr) ::viewmatrix::Matrix();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::viewmatrix::Matrix::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Matrix_viewmatrix_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Matrix_viewmatrix_2eproto}, {}};

static void InitDefaultsscc_info_Request_viewmatrix_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::viewmatrix::_Request_default_instance_;
    new (ptr) ::viewmatrix::Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::viewmatrix::Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Request_viewmatrix_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Request_viewmatrix_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_viewmatrix_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_viewmatrix_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_viewmatrix_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_viewmatrix_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r0c0_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r0c1_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r0c2_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r0c3_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r1c0_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r1c1_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r1c2_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r1c3_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r2c0_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r2c1_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r2c2_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r2c3_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r3c0_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r3c1_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r3c2_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, r3c3_),
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Matrix, update_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::viewmatrix::Request, name_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::viewmatrix::Matrix)},
  { 22, -1, sizeof(::viewmatrix::Request)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::viewmatrix::_Matrix_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::viewmatrix::_Request_default_instance_),
};

const char descriptor_table_protodef_viewmatrix_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020viewmatrix.proto\022\nviewmatrix\"\370\001\n\006Matri"
  "x\022\014\n\004r0c0\030\001 \001(\001\022\014\n\004r0c1\030\002 \001(\001\022\014\n\004r0c2\030\003 "
  "\001(\001\022\014\n\004r0c3\030\004 \001(\001\022\014\n\004r1c0\030\005 \001(\001\022\014\n\004r1c1\030"
  "\006 \001(\001\022\014\n\004r1c2\030\007 \001(\001\022\014\n\004r1c3\030\010 \001(\001\022\014\n\004r2c"
  "0\030\t \001(\001\022\014\n\004r2c1\030\n \001(\001\022\014\n\004r2c2\030\013 \001(\001\022\014\n\004r"
  "2c3\030\014 \001(\001\022\014\n\004r3c0\030\r \001(\001\022\014\n\004r3c1\030\016 \001(\001\022\014\n"
  "\004r3c2\030\017 \001(\001\022\014\n\004r3c3\030\020 \001(\001\022\016\n\006update\030\021 \001("
  "\010\"\027\n\007Request\022\014\n\004name\030\001 \001(\t2G\n\tViewTrans\022"
  ":\n\rGetViewMatrix\022\023.viewmatrix.Request\032\022."
  "viewmatrix.Matrix\"\000B\030\n\026org.emnets.ar.arc"
  "lientb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_viewmatrix_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_viewmatrix_2eproto_sccs[2] = {
  &scc_info_Matrix_viewmatrix_2eproto.base,
  &scc_info_Request_viewmatrix_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_viewmatrix_2eproto_once;
static bool descriptor_table_viewmatrix_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_viewmatrix_2eproto = {
  &descriptor_table_viewmatrix_2eproto_initialized, descriptor_table_protodef_viewmatrix_2eproto, "viewmatrix.proto", 413,
  &descriptor_table_viewmatrix_2eproto_once, descriptor_table_viewmatrix_2eproto_sccs, descriptor_table_viewmatrix_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_viewmatrix_2eproto::offsets,
  file_level_metadata_viewmatrix_2eproto, 2, file_level_enum_descriptors_viewmatrix_2eproto, file_level_service_descriptors_viewmatrix_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_viewmatrix_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_viewmatrix_2eproto), true);
namespace viewmatrix {

// ===================================================================

void Matrix::InitAsDefaultInstance() {
}
class Matrix::_Internal {
 public:
};

Matrix::Matrix()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:viewmatrix.Matrix)
}
Matrix::Matrix(const Matrix& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&r0c0_, &from.r0c0_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_) -
    reinterpret_cast<char*>(&r0c0_)) + sizeof(update_));
  // @@protoc_insertion_point(copy_constructor:viewmatrix.Matrix)
}

void Matrix::SharedCtor() {
  ::memset(&r0c0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_) -
      reinterpret_cast<char*>(&r0c0_)) + sizeof(update_));
}

Matrix::~Matrix() {
  // @@protoc_insertion_point(destructor:viewmatrix.Matrix)
  SharedDtor();
}

void Matrix::SharedDtor() {
}

void Matrix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Matrix& Matrix::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Matrix_viewmatrix_2eproto.base);
  return *internal_default_instance();
}


void Matrix::Clear() {
// @@protoc_insertion_point(message_clear_start:viewmatrix.Matrix)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&r0c0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_) -
      reinterpret_cast<char*>(&r0c0_)) + sizeof(update_));
  _internal_metadata_.Clear();
}

const char* Matrix::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double r0c0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          r0c0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r0c1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          r0c1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r0c2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          r0c2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r0c3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          r0c3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r1c0 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          r1c0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r1c1 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          r1c1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r1c2 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          r1c2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r1c3 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          r1c3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r2c0 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          r2c0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r2c1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          r2c1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r2c2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          r2c2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r2c3 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 97)) {
          r2c3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r3c0 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 105)) {
          r3c0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r3c1 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 113)) {
          r3c1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r3c2 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 121)) {
          r3c2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double r3c3 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 129)) {
          r3c3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool update = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          update_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Matrix::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viewmatrix.Matrix)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double r0c0 = 1;
  if (!(this->r0c0() <= 0 && this->r0c0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_r0c0(), target);
  }

  // double r0c1 = 2;
  if (!(this->r0c1() <= 0 && this->r0c1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_r0c1(), target);
  }

  // double r0c2 = 3;
  if (!(this->r0c2() <= 0 && this->r0c2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_r0c2(), target);
  }

  // double r0c3 = 4;
  if (!(this->r0c3() <= 0 && this->r0c3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_r0c3(), target);
  }

  // double r1c0 = 5;
  if (!(this->r1c0() <= 0 && this->r1c0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_r1c0(), target);
  }

  // double r1c1 = 6;
  if (!(this->r1c1() <= 0 && this->r1c1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_r1c1(), target);
  }

  // double r1c2 = 7;
  if (!(this->r1c2() <= 0 && this->r1c2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_r1c2(), target);
  }

  // double r1c3 = 8;
  if (!(this->r1c3() <= 0 && this->r1c3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_r1c3(), target);
  }

  // double r2c0 = 9;
  if (!(this->r2c0() <= 0 && this->r2c0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_r2c0(), target);
  }

  // double r2c1 = 10;
  if (!(this->r2c1() <= 0 && this->r2c1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_r2c1(), target);
  }

  // double r2c2 = 11;
  if (!(this->r2c2() <= 0 && this->r2c2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_r2c2(), target);
  }

  // double r2c3 = 12;
  if (!(this->r2c3() <= 0 && this->r2c3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(12, this->_internal_r2c3(), target);
  }

  // double r3c0 = 13;
  if (!(this->r3c0() <= 0 && this->r3c0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_r3c0(), target);
  }

  // double r3c1 = 14;
  if (!(this->r3c1() <= 0 && this->r3c1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(14, this->_internal_r3c1(), target);
  }

  // double r3c2 = 15;
  if (!(this->r3c2() <= 0 && this->r3c2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(15, this->_internal_r3c2(), target);
  }

  // double r3c3 = 16;
  if (!(this->r3c3() <= 0 && this->r3c3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(16, this->_internal_r3c3(), target);
  }

  // bool update = 17;
  if (this->update() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_update(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viewmatrix.Matrix)
  return target;
}

size_t Matrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viewmatrix.Matrix)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double r0c0 = 1;
  if (!(this->r0c0() <= 0 && this->r0c0() >= 0)) {
    total_size += 1 + 8;
  }

  // double r0c1 = 2;
  if (!(this->r0c1() <= 0 && this->r0c1() >= 0)) {
    total_size += 1 + 8;
  }

  // double r0c2 = 3;
  if (!(this->r0c2() <= 0 && this->r0c2() >= 0)) {
    total_size += 1 + 8;
  }

  // double r0c3 = 4;
  if (!(this->r0c3() <= 0 && this->r0c3() >= 0)) {
    total_size += 1 + 8;
  }

  // double r1c0 = 5;
  if (!(this->r1c0() <= 0 && this->r1c0() >= 0)) {
    total_size += 1 + 8;
  }

  // double r1c1 = 6;
  if (!(this->r1c1() <= 0 && this->r1c1() >= 0)) {
    total_size += 1 + 8;
  }

  // double r1c2 = 7;
  if (!(this->r1c2() <= 0 && this->r1c2() >= 0)) {
    total_size += 1 + 8;
  }

  // double r1c3 = 8;
  if (!(this->r1c3() <= 0 && this->r1c3() >= 0)) {
    total_size += 1 + 8;
  }

  // double r2c0 = 9;
  if (!(this->r2c0() <= 0 && this->r2c0() >= 0)) {
    total_size += 1 + 8;
  }

  // double r2c1 = 10;
  if (!(this->r2c1() <= 0 && this->r2c1() >= 0)) {
    total_size += 1 + 8;
  }

  // double r2c2 = 11;
  if (!(this->r2c2() <= 0 && this->r2c2() >= 0)) {
    total_size += 1 + 8;
  }

  // double r2c3 = 12;
  if (!(this->r2c3() <= 0 && this->r2c3() >= 0)) {
    total_size += 1 + 8;
  }

  // double r3c0 = 13;
  if (!(this->r3c0() <= 0 && this->r3c0() >= 0)) {
    total_size += 1 + 8;
  }

  // double r3c1 = 14;
  if (!(this->r3c1() <= 0 && this->r3c1() >= 0)) {
    total_size += 1 + 8;
  }

  // double r3c2 = 15;
  if (!(this->r3c2() <= 0 && this->r3c2() >= 0)) {
    total_size += 1 + 8;
  }

  // double r3c3 = 16;
  if (!(this->r3c3() <= 0 && this->r3c3() >= 0)) {
    total_size += 2 + 8;
  }

  // bool update = 17;
  if (this->update() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Matrix::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:viewmatrix.Matrix)
  GOOGLE_DCHECK_NE(&from, this);
  const Matrix* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Matrix>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:viewmatrix.Matrix)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:viewmatrix.Matrix)
    MergeFrom(*source);
  }
}

void Matrix::MergeFrom(const Matrix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viewmatrix.Matrix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.r0c0() <= 0 && from.r0c0() >= 0)) {
    _internal_set_r0c0(from._internal_r0c0());
  }
  if (!(from.r0c1() <= 0 && from.r0c1() >= 0)) {
    _internal_set_r0c1(from._internal_r0c1());
  }
  if (!(from.r0c2() <= 0 && from.r0c2() >= 0)) {
    _internal_set_r0c2(from._internal_r0c2());
  }
  if (!(from.r0c3() <= 0 && from.r0c3() >= 0)) {
    _internal_set_r0c3(from._internal_r0c3());
  }
  if (!(from.r1c0() <= 0 && from.r1c0() >= 0)) {
    _internal_set_r1c0(from._internal_r1c0());
  }
  if (!(from.r1c1() <= 0 && from.r1c1() >= 0)) {
    _internal_set_r1c1(from._internal_r1c1());
  }
  if (!(from.r1c2() <= 0 && from.r1c2() >= 0)) {
    _internal_set_r1c2(from._internal_r1c2());
  }
  if (!(from.r1c3() <= 0 && from.r1c3() >= 0)) {
    _internal_set_r1c3(from._internal_r1c3());
  }
  if (!(from.r2c0() <= 0 && from.r2c0() >= 0)) {
    _internal_set_r2c0(from._internal_r2c0());
  }
  if (!(from.r2c1() <= 0 && from.r2c1() >= 0)) {
    _internal_set_r2c1(from._internal_r2c1());
  }
  if (!(from.r2c2() <= 0 && from.r2c2() >= 0)) {
    _internal_set_r2c2(from._internal_r2c2());
  }
  if (!(from.r2c3() <= 0 && from.r2c3() >= 0)) {
    _internal_set_r2c3(from._internal_r2c3());
  }
  if (!(from.r3c0() <= 0 && from.r3c0() >= 0)) {
    _internal_set_r3c0(from._internal_r3c0());
  }
  if (!(from.r3c1() <= 0 && from.r3c1() >= 0)) {
    _internal_set_r3c1(from._internal_r3c1());
  }
  if (!(from.r3c2() <= 0 && from.r3c2() >= 0)) {
    _internal_set_r3c2(from._internal_r3c2());
  }
  if (!(from.r3c3() <= 0 && from.r3c3() >= 0)) {
    _internal_set_r3c3(from._internal_r3c3());
  }
  if (from.update() != 0) {
    _internal_set_update(from._internal_update());
  }
}

void Matrix::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:viewmatrix.Matrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Matrix::CopyFrom(const Matrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viewmatrix.Matrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Matrix::IsInitialized() const {
  return true;
}

void Matrix::InternalSwap(Matrix* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(r0c0_, other->r0c0_);
  swap(r0c1_, other->r0c1_);
  swap(r0c2_, other->r0c2_);
  swap(r0c3_, other->r0c3_);
  swap(r1c0_, other->r1c0_);
  swap(r1c1_, other->r1c1_);
  swap(r1c2_, other->r1c2_);
  swap(r1c3_, other->r1c3_);
  swap(r2c0_, other->r2c0_);
  swap(r2c1_, other->r2c1_);
  swap(r2c2_, other->r2c2_);
  swap(r2c3_, other->r2c3_);
  swap(r3c0_, other->r3c0_);
  swap(r3c1_, other->r3c1_);
  swap(r3c2_, other->r3c2_);
  swap(r3c3_, other->r3c3_);
  swap(update_, other->update_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Matrix::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Request::InitAsDefaultInstance() {
}
class Request::_Internal {
 public:
};

Request::Request()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:viewmatrix.Request)
}
Request::Request(const Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:viewmatrix.Request)
}

void Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Request_viewmatrix_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:viewmatrix.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Request& Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Request_viewmatrix_2eproto.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:viewmatrix.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "viewmatrix.Request.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:viewmatrix.Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "viewmatrix.Request.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viewmatrix.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viewmatrix.Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:viewmatrix.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:viewmatrix.Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:viewmatrix.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viewmatrix.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:viewmatrix.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viewmatrix.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::InternalSwap(Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Request::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace viewmatrix
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::viewmatrix::Matrix* Arena::CreateMaybeMessage< ::viewmatrix::Matrix >(Arena* arena) {
  return Arena::CreateInternal< ::viewmatrix::Matrix >(arena);
}
template<> PROTOBUF_NOINLINE ::viewmatrix::Request* Arena::CreateMaybeMessage< ::viewmatrix::Request >(Arena* arena) {
  return Arena::CreateInternal< ::viewmatrix::Request >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
